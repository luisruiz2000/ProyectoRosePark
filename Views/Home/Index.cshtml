@model IEnumerable<Habitacione>

@{
    ViewData["Title"] = "Home Page";
    var paquetes = ViewData["Paquetes"] as List<RosePark.Models.Paquete>;
    var servicios = ViewData["Servicios"] as List<RosePark.Models.Servicio>;
    var habitaciones = ViewData["Habitaciones"] as List<RosePark.Models.Habitacione>;

    // Lista de URLs de imágenes
    var imageUrls = new List<string>
{
"https://i.imgur.com/545yCD7.jpeg",
"https://i.imgur.com/jnaS7vU.jpeg",
"https://i.imgur.com/5B96vii.jpeg",
"https://i.imgur.com/g7y85wp.jpeg"
};
}

<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
</head>

<style>
    .img-habitaciones {
        height: 200px !important;
    }

    .card-body {
        justify-content: start;
    }

    .buscador {
        background-color: #ccccccef;
    }

    .habitacionesDisContainer {
        background-color: #cccccc86 !important;
        padding: 2rem 0;
    }

    .habitacionesDisponibles {
        width: 100%;
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
        align-items: center;
        gap: 2rem;
    }

    .containerCard {
        margin-bottom: 1rem;
    }
</style>

<body>
    <header class="header">
        <div id="carouselExampleAutoplaying" class="carousel slide" data-bs-ride="carousel" data-bs-interval="3000">
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <img src="https://i.imgur.com/545yCD7.jpeg" class="d-block w-100 imgCarousel" alt="...">
                </div>
                <div class="carousel-item">
                    <img src="https://i.imgur.com/jnaS7vU.jpeg" class="d-block w-100 imgCarousel" alt="...">
                </div>
                <div class="carousel-item">
                    <img src="https://i.imgur.com/g7y85wp.jpeg" class="d-block w-100 imgCarousel" alt="...">
                </div>
                <div class="carousel-item">
                    <img src="https://i.imgur.com/jnaS7vU.jpeg" class="d-block w-100 imgCarousel" alt="...">
                </div>
            </div>
            <button class="carousel-control-prev d-none" type="button" data-bs-target="#carouselExampleAutoplaying"
                data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next d-none" type="button" data-bs-target="#carouselExampleAutoplaying"
                data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </header>

    <section class="buscador container-fluid d-flex">
        <form asp-action="Search" asp-controller="Home" method="post"
            class="d-flex justify-content-evenly align-items-end formBuscador">

            <div class="row">
                <label for="checkinDate" class="font-weight-bold text-black">Fecha Inicio</label>
                <input type="date" name="checkinDate" id="checkinDate" class="form-control" required>
            </div>

            <div class="row">
                <label for="checkoutDate" class="font-weight-bold text-black">Fecha Final</label>
                <input type="date" name="checkoutDate" id="checkoutDate" class="form-control" required>
            </div>

            <div class="row">
                <label for="numeroPersonas" class="font-weight-bold text-black">N° de Personas</label>
                <select name="numeroPersonas" id="numeroPersonas" class="form-control">
                    <option value="1">1</option>
                    <option value="2" selected>2</option>
                    <option value="3">3</option>
                    <option value="4">4</option>
                </select>
            </div>
            <button type="submit" class="btn btn-primary btnBuscador">Buscar</button>
        </form>
    </section>

    <section class="descripcion container-fluid d-flex">
        <div class="d-flex justify-content-center align-items-center">
            <img src="img/img_3.jpg" alt="" class="imgDescripcion" width="600">
            <div class="">
                <h2 class="text-justify">Descubra Rose Park</h2><br>
                <p class="text-justify fs-6">Descubre una experiencia única en la naturaleza con nuestros exclusivos
                    paquetes de
                    glamping, que combinan la aventura al aire libre con el confort de alojamientos de lujo. Disfruta de
                    cabañas y
                    tiendas completamente equipadas, ubicadas en impresionantes paisajes, mientras te relajas con
                    servicios como
                    limpieza diaria, comidas gourmet, y actividades personalizadas, desde fogatas hasta senderismo.
                    Nuestros
                    paquetes están diseñados para brindarte una escapada perfecta, ya sea en pareja, con amigos o en
                    familia.
                    Reserva ahora y vive la magia del glamping sin renunciar a la comodidad.</p>
            </div>
        </div>
    </section>


    @* Habitaciones disponibles *@

    @* <div id="" class="paquetes container-fluid" class="carousel slide">
    <h2 class="text-center mb-4">Nuestras habitaciones</h2>
    <div class="">
    @for (int i = 0; i < habitaciones.Count(); i += 3)
    {
    <div class="carousel-item @(i == 0 ? "active" : "")">
    <div class="row">
    @for (int j = i; j < i + 3 && j < habitaciones.Count(); j++)
    {
    var habitacion = habitaciones.ElementAt(j);
    // Obtén la URL de la imagen correspondiente a esta habitación
    var imgIndex = j % imageUrls.Count;
    var imageUrl = imageUrls[imgIndex];

    <div class="col-md-4">
    <div class="card shadow-lg" style="width: 18rem; height: 100%;">
    <img src="@imageUrl" class="card-img-top img-habitaciones" alt="Imagen de la Habitación">
    <div class="card-body">
    <h5 class="card-title">@habitacion.NorHabitacion</h5>
    <p class="card-text">@habitacion.Descripcion</p>
    </div>
    </div>
    </div>
    }
    </div>
    </div>
    }
    </div>
    </div> *@

    <section class="habitacionesDisContainer">
        <h2 class="text-center mb-5">Nuestras Habitaciones</h2>
        <div>
            @for (int i = 0; i < habitaciones.Count(); i += 3)
            {
                <div class="habitacionesDisponibles">
                    @for (int j = i; j < i + 3 && j < habitaciones.Count(); j++)
                    {
                        var habitacion = habitaciones.ElementAt(j);
                        // Obtén la URL de la imagen correspondiente a esta habitación
                        var imgIndex = j % imageUrls.Count;
                        var imageUrl = imageUrls[imgIndex];
                        <div class="containerCard">
                            <div class="card" style="width: 380px; height: 100%;">
                                <img src="@imageUrl" class="card-img-top img-habitaciones" alt="Imagen de la Habitación">
                                <div class="card-body">
                                    <h5 class="card-title">@habitacion.NorHabitacion</h5>
                                    <p class="card-text">@habitacion.Descripcion</p>
                                </div>
                                <hr>
                                <div class="text-center p-2">
                                    <img src="@Url.Content("~/img/Iconos/star-con.png")" alt="*" width="20">
                                    <img src="@Url.Content("~/img/Iconos/star-con.png")" alt="*" width="20">
                                    <img src="@Url.Content("~/img/Iconos/star-con.png")" alt="*" width="20">
                                    <img src="@Url.Content("~/img/Iconos/star-con.png")" alt="*" width="20">
                                    <img src="@Url.Content("~/img/Iconos/star-con.png")" alt="*" width="20">

                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </section>

    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.0/js/bootstrap.bundle.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Obtener las referencias a los inputs de fechas
            const checkinDate = document.getElementById('checkinDate');
            const checkoutDate = document.getElementById('checkoutDate');
            const today = new Date().toISOString().split('T')[0]; // Obtener la fecha de hoy en formato 'YYYY-MM-DD'

            // Establecer la fecha mínima de check-in y check-out como la fecha de hoy
            checkinDate.setAttribute('min', today);
            checkoutDate.setAttribute('min', today);

            // Función para actualizar las fechas mínimas
            function updateMinCheckoutDate() {
                const checkinValue = checkinDate.value;
                if (checkinValue) {
                    const minCheckoutDate = new Date(checkinValue);
                    minCheckoutDate.setDate(minCheckoutDate.getDate() + 1); // Añadir un día
                    checkoutDate.setAttribute('min', minCheckoutDate.toISOString().split('T')[0]);

                    // Si la fecha de check-out es antes de la nueva fecha mínima, actualizarla
                    if (checkoutDate.value && checkoutDate.value < minCheckoutDate.toISOString().split('T')[0]) {
                        checkoutDate.value = minCheckoutDate.toISOString().split('T')[0];
                    }
                }
            }

            // Evento para cuando se cambia la fecha de check-in
            checkinDate.addEventListener('change', function () {
                updateMinCheckoutDate();
                // Si la fecha de check-out es antes de la fecha de check-in, actualizarla
                if (checkoutDate.value && checkoutDate.value <= checkinDate.value) {
                    alert('La fecha de check-out debe ser al menos un día después de la fecha de check-in.');
                    checkoutDate.value = '';
                }
            });

            // Evento para cuando se cambia la fecha de check-out
            checkoutDate.addEventListener('change', function () {
                // Asegurarse de que la fecha de check-out no sea menor que la de check-in
                if (checkoutDate.value <= checkinDate.value) {
                    alert('La fecha de check-out debe ser al menos un día después de la fecha de check-in.');
                    checkoutDate.value = '';
                }
            });
        });
    </script>
</body>

</html>
